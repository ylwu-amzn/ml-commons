/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
    id 'java'
    id 'jacoco'
    id "io.freefair.lombok"

    // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.18'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
}

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/maven2/" }
    mavenCentral()
    mavenLocal()
}

def grpcVersion = '1.47.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.21.1'
def protocVersion = protobufVersion

dependencies {
    compileOnly group: 'org.opensearch', name: 'opensearch', version: "${opensearch_version}"
    implementation project(':opensearch-ml-common')
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.12'
    implementation group: 'org.tribuo', name: 'tribuo-clustering-kmeans', version: '4.2.1'
    implementation group: 'org.tribuo', name: 'tribuo-regression-sgd', version: '4.2.1'
    implementation group: 'org.tribuo', name: 'tribuo-anomaly-libsvm', version: '4.2.1'
    implementation group: 'org.tribuo', name: 'tribuo-classification-sgd', version: '4.2.1'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation 'software.amazon.randomcutforest:randomcutforest-parkservices:3.0-rc3'
    implementation 'software.amazon.randomcutforest:randomcutforest-core:3.0-rc3'
    implementation group: 'io.protostuff', name: 'protostuff-core', version: '1.8.0'
    implementation group: 'io.protostuff', name: 'protostuff-runtime', version: '1.8.0'
    implementation group: 'io.protostuff', name: 'protostuff-api', version: '1.8.0'
    implementation group: 'io.protostuff', name: 'protostuff-collectionschema', version: '1.8.0'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.4.0'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '4.4.0'

    // https://mvnrepository.com/artifact/ai.djl/api
    implementation group: 'ai.djl', name: 'api', version: '0.19.0-SNAPSHOT'
    implementation group: 'ai.djl.tensorflow', name: 'tensorflow-engine', version: '0.19.0-SNAPSHOT'
    implementation group: 'ai.djl.tensorflow', name: 'tensorflow-model-zoo', version: '0.19.0-SNAPSHOT'
    implementation group: 'ai.djl.mxnet', name: 'mxnet-engine', version: '0.19.0-SNAPSHOT'
    implementation group: 'ai.djl.mxnet', name: 'mxnet-model-zoo', version: '0.19.0-SNAPSHOT'
    implementation group: 'ai.djl.pytorch', name: 'pytorch-engine', version: '0.19.0-SNAPSHOT'
    implementation group: 'ai.djl.pytorch', name: 'pytorch-model-zoo', version: '0.19.0-SNAPSHOT'
    implementation group: 'ai.djl.pytorch', name: 'pytorch-jni', version: '1.11.0-0.19.0-SNAPSHOT'
    implementation group: 'ai.djl.pytorch', name: 'pytorch-native-cpu-precxx11', version: '1.11.0'
    implementation group: 'ai.djl.huggingface', name: 'tokenizers', version: '0.19.0-SNAPSHOT'
    //implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.17.1"
    //implementation "org.slf4j:slf4j-simple:1.7.36"

    // gRPC
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
    }

    dependsOn test
}

List<String> jacocoExclusions = [
        // TODO: add more unit test to meet the minimal test coverage.
        'org.opensearch.ml.engine.algorithms.clustering.RCFSummarize',
        'org.opensearch.ml.engine.algorithms.regression.*',
        'org.opensearch.ml.engine.MLEngineClassLoader',
        'org.opensearch.ml.engine.algorithms.custom.*',
        'org.opensearch.ml.engine.algorithms.bertqa.*',
        'org.opensearch.ml.engine.algorithms.od.*',
        'org.opensearch.ml.engine.algorithms.resnet18.*',
        'org.opensearch.ml.engine.algorithms.rcf.*',
        'org.opensearch.ml.engine.algorithms.sentence_transformer.*',
        'org.opensearch.ml.serving.*',
        'org.opensearch.ml.engine.grpc.*',
        'org.opensearch.ml.engine.exceptions.*',
]

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            excludes = jacocoExclusions
            limit {
                counter = 'BRANCH'
                minimum = 0.5
            }
        }
        rule {
            element = 'CLASS'
            excludes = jacocoExclusions
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }
    }
    dependsOn jacocoTestReport
}
check.dependsOn jacocoTestCoverageVerification
