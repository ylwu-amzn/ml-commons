/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
    id 'java'
    id 'jacoco'
    id "io.freefair.lombok"
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly group: 'org.opensearch', name: 'opensearch', version: "${opensearch_version}"
    implementation project(':opensearch-ml-common')
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.12'
    implementation group: 'org.tribuo', name: 'tribuo-clustering-kmeans', version: '4.2.1'
    implementation group: 'org.tribuo', name: 'tribuo-regression-sgd', version: '4.2.1'
    implementation group: 'org.tribuo', name: 'tribuo-anomaly-libsvm', version: '4.2.1'
    implementation group: 'org.tribuo', name: 'tribuo-classification-sgd', version: '4.2.1'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation 'software.amazon.randomcutforest:randomcutforest-parkservices:3.0-rc3'
    implementation 'software.amazon.randomcutforest:randomcutforest-core:3.0-rc3'
    implementation group: 'io.protostuff', name: 'protostuff-core', version: '1.8.0'
    implementation group: 'io.protostuff', name: 'protostuff-runtime', version: '1.8.0'
    implementation group: 'io.protostuff', name: 'protostuff-api', version: '1.8.0'
    implementation group: 'io.protostuff', name: 'protostuff-collectionschema', version: '1.8.0'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.4.0'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '4.4.0'
    implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'
    implementation platform("ai.djl:bom:0.20.0-SNAPSHOT")
    implementation group: 'ai.djl.pytorch', name: 'pytorch-model-zoo'
    implementation group: 'ai.djl', name: 'api'
    implementation group: 'ai.djl.onnxruntime', name: 'onnxruntime-engine'
    implementation group: 'ai.djl.huggingface', name: 'tokenizers'
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
    }

    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                minimum = 0.90
            }
            limit {
                counter = 'BRANCH'
                minimum = 0.85
            }
        }
    }
    dependsOn jacocoTestReport
}
check.dependsOn jacocoTestCoverageVerification
